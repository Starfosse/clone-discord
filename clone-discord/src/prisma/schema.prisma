// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

enum stateList{
  ONLINE
  ABSENT
  BUSY
  OFFLINE
}

model User {
  id String @id @default(uuid())
  userId String @unique
  pseudo String
  imageUrl String @default("")
  state stateList @default(OFFLINE)

  servers Server[]
  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Server{
  id String @id @default(uuid())
  name String
  imageUrl String
  inviteCode String @unique

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  channels Channel[]
  members Member[]
  channelGroups ChannelGroup[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([userId])
}

enum ChannelType{
  TEXT
  AUDIO
  VIDEO
}

model Channel{
  id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  serverId String
  server Server @relation(fields: [serverId], references:[id], onDelete: Cascade)

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  channelGroupId String
  channelGroupe ChannelGroup @relation(fields: [channelGroupId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([serverId])
  @@index([userId])
  @@index([channelGroupId])
}

model ChannelGroup{
  id String @id @default(uuid())
  name String
  roleRequired MemberRole @default(GUEST)

  serverId String
  server Server @relation(fields: [serverId], references:[id], onDelete: Cascade)

  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([serverId])
}

enum MemberRole{
  ADMIN
  MODERATOR
  GUEST
}

model Member{
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  serverId String
  server Server @relation(fields: [serverId], references:[id], onDelete: Cascade)

  userId String
  user User @relation(fields:[userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([serverId])
  @@index([userId])
}

